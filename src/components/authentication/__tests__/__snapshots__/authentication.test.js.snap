// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Authorization Component should render a connected component: connected 1`] = `
<ContextConsumer>
  <Component />
</ContextConsumer>
`;

exports[`Authorization Component should render a non-connected component authorized: non-connected authorized 1`] = `
<Router
  history={
    Object {
      "action": "POP",
      "block": [Function],
      "createHref": [Function],
      "go": [Function],
      "goBack": [Function],
      "goForward": [Function],
      "length": 1,
      "listen": [Function],
      "location": Object {
        "hash": "",
        "pathname": "/",
        "search": "",
        "state": undefined,
      },
      "push": [Function],
      "replace": [Function],
    }
  }
>
  <Authentication
    appName="subscriptions"
    authorizeUser={[Function]}
    history={
      Object {
        "listen": [Function],
        "push": [Function],
      }
    }
    navigation={
      Array [
        Object {
          "default": true,
          "id": "all",
          "pathParameter": "RHEL",
          "title": "Red Hat Enterprise Linux",
        },
        Object {
          "id": "arm",
          "pathParameter": "RHEL for ARM",
          "title": "ARM",
        },
        Object {
          "id": "ibmpower",
          "pathParameter": "RHEL for IBM Power",
          "title": "IBM Power",
        },
        Object {
          "id": "ibmz",
          "pathParameter": "RHEL for IBM z",
          "title": "IBM Z systems",
        },
        Object {
          "id": "x86",
          "pathParameter": "RHEL for x86",
          "title": "x86",
        },
      ]
    }
    routes={
      Array [
        Object {
          "component": [Function],
          "disabled": false,
          "exact": true,
          "redirect": true,
          "render": true,
          "title": "Red Hat Enterprise Linux",
          "to": "/rhel-sw/all",
        },
        Object {
          "component": [Function],
          "disabled": false,
          "exact": true,
          "id": "rhel-sw",
          "render": true,
          "title": "Red Hat Enterprise Linux",
          "to": "/rhel-sw/:variant",
        },
        Object {
          "activateOnError": true,
          "component": [Function],
          "disabled": false,
          "exact": true,
          "id": "soon",
          "render": true,
          "title": "Tour",
          "to": "/soon",
        },
        Object {
          "component": [Function],
          "disabled": false,
          "exact": true,
          "id": "tour",
          "render": true,
          "title": "Tour",
          "to": "/tour",
        },
      ]
    }
    session={
      Object {
        "apiAccess": true,
        "authorized": true,
        "error": false,
        "errorMessage": "",
        "pending": false,
      }
    }
  >
    <span
      className="test"
    >
      lorem
    </span>
  </Authentication>
</Router>
`;

exports[`Authorization Component should render a non-connected component error: non-connected error 1`] = `
<Router
  history={
    Object {
      "action": "POP",
      "block": [Function],
      "createHref": [Function],
      "go": [Function],
      "goBack": [Function],
      "goForward": [Function],
      "length": 1,
      "listen": [Function],
      "location": Object {
        "hash": "",
        "pathname": "/",
        "search": "",
        "state": undefined,
      },
      "push": [Function],
      "replace": [Function],
    }
  }
>
  <Authentication
    appName="subscriptions"
    authorizeUser={[Function]}
    history={
      Object {
        "listen": [Function],
        "push": [Function],
      }
    }
    navigation={
      Array [
        Object {
          "default": true,
          "id": "all",
          "pathParameter": "RHEL",
          "title": "Red Hat Enterprise Linux",
        },
        Object {
          "id": "arm",
          "pathParameter": "RHEL for ARM",
          "title": "ARM",
        },
        Object {
          "id": "ibmpower",
          "pathParameter": "RHEL for IBM Power",
          "title": "IBM Power",
        },
        Object {
          "id": "ibmz",
          "pathParameter": "RHEL for IBM z",
          "title": "IBM Z systems",
        },
        Object {
          "id": "x86",
          "pathParameter": "RHEL for x86",
          "title": "x86",
        },
      ]
    }
    routes={
      Array [
        Object {
          "component": [Function],
          "disabled": false,
          "exact": true,
          "redirect": true,
          "render": true,
          "title": "Red Hat Enterprise Linux",
          "to": "/rhel-sw/all",
        },
        Object {
          "component": [Function],
          "disabled": false,
          "exact": true,
          "id": "rhel-sw",
          "render": true,
          "title": "Red Hat Enterprise Linux",
          "to": "/rhel-sw/:variant",
        },
        Object {
          "activateOnError": true,
          "component": [Function],
          "disabled": false,
          "exact": true,
          "id": "soon",
          "render": true,
          "title": "Tour",
          "to": "/soon",
        },
        Object {
          "component": [Function],
          "disabled": false,
          "exact": true,
          "id": "tour",
          "render": true,
          "title": "Tour",
          "to": "/tour",
        },
      ]
    }
    session={
      Object {
        "apiAccess": false,
        "authorized": false,
        "error": true,
        "errorMessage": "Authentication credentials were not provided.",
        "pending": false,
      }
    }
  >
    <span
      className="test"
    >
      lorem
    </span>
  </Authentication>
</Router>
`;

exports[`Authorization Component should render a non-connected component pending: non-connected pending 1`] = `
<PageLayout>
  <PageHeader>
    <PageHeaderTitle
      title="Â "
    />
  </PageHeader>
  <EmptyState
    className="fadein"
    variant="full"
  >
    <EmptyStateIcon
      icon={[Function]}
    />
    <EmptyStateBody>
      Authenticating...
    </EmptyStateBody>
  </EmptyState>
</PageLayout>
`;
