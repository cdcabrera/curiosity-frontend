// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Toolbar Component should handle displaying a group variant field: group variant, disabled 1`] = `
<Toolbar
  className="curiosity-toolbar pf-m-toggle-group-container ins-c-primary-toolbar"
  clearAllFilters={[Function]}
  clearFiltersButtonText="t(curiosity-toolbar.clearFilters)"
  collapseListedFiltersBreakpoint="sm"
  id="curiosity-toolbar"
>
  <ToolbarContent
    className="curiosity-toolbar__content"
    isExpanded={false}
    showClearFiltersButton={false}
  >
    <ToolbarToggleGroup
      breakpoint="md"
      toggleIcon={<FilterIcon />}
    >
      <ForwardRef
        variant="filter-group"
      >
        <ToolbarFilter
          categoryName="t(curiosity-toolbar.label_filter, {"context":"usage"})"
          chipGroupCollapsedText={null}
          chipGroupExpandedText={null}
          chips={[]}
          deleteChip={[Function]}
          deleteChipGroup={null}
          showToolbarItem={true}
          useToolbarContentContext={[Function]}
          useToolbarContext={[Function]}
        >
          <Usage
            isFilter={true}
          />
        </ToolbarFilter>
      </ForwardRef>
    </ToolbarToggleGroup>
    <ForwardRef />
    <ForwardRef
      align={
        {
          "default": "alignRight",
        }
      }
    >
      <span>
        lorem ipsum
      </span>
    </ForwardRef>
  </ToolbarContent>
</Toolbar>
`;

exports[`Toolbar Component should handle displaying a group variant field: group variant, standalone 1`] = `
<ToolbarFieldGroupVariant
  isFilter={false}
  isStandalone={true}
  position="left"
  t={[Function]}
  useOnSelect={[Function]}
  useProduct={[Function]}
  useSelector={[Function]}
  useToolbarFieldOptions={[Function]}
/>
`;

exports[`Toolbar Component should handle displaying secondary components, fields: secondary 1`] = `
<Toolbar
  className="curiosity-toolbar pf-m-toggle-group-container ins-c-primary-toolbar"
  clearAllFilters={[Function]}
  clearFiltersButtonText="t(curiosity-toolbar.clearFilters)"
  collapseListedFiltersBreakpoint="sm"
  id="curiosity-toolbar"
>
  <ToolbarFieldGroupVariant
    isFilter={false}
    isStandalone={false}
    position="left"
    t={[Function]}
    useOnSelect={[Function]}
    useProduct={[Function]}
    useSelector={[Function]}
    useToolbarFieldOptions={[Function]}
  />
  <ToolbarContent
    className="curiosity-toolbar__content"
    isExpanded={false}
    showClearFiltersButton={false}
  >
    <ToolbarToggleGroup
      breakpoint="md"
      toggleIcon={<FilterIcon />}
    >
      <ForwardRef
        variant="filter-group"
      >
        <ToolbarFilter
          categoryName="t(curiosity-toolbar.label_filter, {"context":"usage"})"
          chipGroupCollapsedText={null}
          chipGroupExpandedText={null}
          chips={[]}
          deleteChip={[Function]}
          deleteChipGroup={null}
          showToolbarItem={true}
          useToolbarContentContext={[Function]}
          useToolbarContext={[Function]}
        >
          <Usage
            isFilter={true}
          />
        </ToolbarFilter>
      </ForwardRef>
    </ToolbarToggleGroup>
    <ForwardRef />
    <ForwardRef
      align={
        {
          "default": "alignRight",
        }
      }
    >
      <span>
        lorem ipsum
      </span>
    </ForwardRef>
  </ToolbarContent>
</Toolbar>
`;

exports[`Toolbar Component should handle updating toolbar chips: chips 1`] = `null`;

exports[`Toolbar Component should handle updating toolbar chips: chips, not clearable 1`] = `null`;

exports[`Toolbar Component should hide categories when a single filter is available: single filter 1`] = `
<Toolbar
  className="curiosity-toolbar pf-m-toggle-group-container ins-c-primary-toolbar"
  clearAllFilters={[Function]}
  clearFiltersButtonText="t(curiosity-toolbar.clearFilters)"
  collapseListedFiltersBreakpoint="sm"
  id="curiosity-toolbar"
>
  <ToolbarFieldGroupVariant
    isFilter={false}
    isStandalone={false}
    position="left"
    t={[Function]}
    useOnSelect={[Function]}
    useProduct={[Function]}
    useSelector={[Function]}
    useToolbarFieldOptions={[Function]}
  />
  <ToolbarContent
    className="curiosity-toolbar__content"
    isExpanded={false}
    showClearFiltersButton={false}
  >
    <ToolbarToggleGroup
      breakpoint="md"
      toggleIcon={<FilterIcon />}
    >
      <ForwardRef
        variant="filter-group"
      >
        <ToolbarFilter
          categoryName="t(curiosity-toolbar.label_filter, {"context":"usage"})"
          chipGroupCollapsedText={null}
          chipGroupExpandedText={null}
          chips={[]}
          deleteChip={[Function]}
          deleteChipGroup={null}
          showToolbarItem={true}
          useToolbarContentContext={[Function]}
          useToolbarContext={[Function]}
        >
          <Usage
            isFilter={true}
          />
        </ToolbarFilter>
      </ForwardRef>
    </ToolbarToggleGroup>
    <ForwardRef />
    <ForwardRef
      align={
        {
          "default": "alignRight",
        }
      }
    />
  </ToolbarContent>
</Toolbar>
`;

exports[`Toolbar Component should render a basic component: basic 1`] = `
<Toolbar
  className="curiosity-toolbar pf-m-toggle-group-container ins-c-primary-toolbar"
  clearAllFilters={[Function]}
  clearFiltersButtonText="t(curiosity-toolbar.clearFilters)"
  collapseListedFiltersBreakpoint="sm"
  id="curiosity-toolbar"
>
  <ToolbarFieldGroupVariant
    isFilter={false}
    isStandalone={false}
    position="left"
    t={[Function]}
    useOnSelect={[Function]}
    useProduct={[Function]}
    useSelector={[Function]}
    useToolbarFieldOptions={[Function]}
  />
  <ToolbarContent
    className="curiosity-toolbar__content"
    isExpanded={false}
    showClearFiltersButton={false}
  >
    <ToolbarToggleGroup
      breakpoint="md"
      toggleIcon={<FilterIcon />}
    >
      <ForwardRef
        variant="filter-group"
      >
        <ToolbarItem>
          <ToolbarFieldSelectCategory
            t={[Function]}
            useOnSelect={[Function]}
            useSelectCategoryOptions={[Function]}
          />
        </ToolbarItem>
        <ToolbarFilter
          categoryName="t(curiosity-toolbar.label_filter, {"context":"usage"})"
          chipGroupCollapsedText={null}
          chipGroupExpandedText={null}
          chips={[]}
          deleteChip={[Function]}
          deleteChipGroup={null}
          showToolbarItem={false}
          useToolbarContentContext={[Function]}
          useToolbarContext={[Function]}
        >
          <Usage
            isFilter={true}
          />
        </ToolbarFilter>
        <ToolbarFilter
          categoryName="t(curiosity-toolbar.label_filter, {"context":"category"})"
          chipGroupCollapsedText={null}
          chipGroupExpandedText={null}
          chips={[]}
          deleteChip={[Function]}
          deleteChipGroup={null}
          showToolbarItem={false}
          useToolbarContentContext={[Function]}
          useToolbarContext={[Function]}
        >
          <Variant
            isFilter={true}
          />
        </ToolbarFilter>
      </ForwardRef>
    </ToolbarToggleGroup>
    <ForwardRef />
    <ForwardRef
      align={
        {
          "default": "alignRight",
        }
      }
    />
  </ToolbarContent>
</Toolbar>
`;

exports[`Toolbar Component should return an empty render, or variant filter, when disabled or missing filters: disabled component 1`] = `null`;

exports[`Toolbar Component should return an empty render, or variant filter, when disabled or missing filters: missing filters, has variant filter 1`] = `
<ToolbarFieldGroupVariant
  isFilter={false}
  isStandalone={true}
  position="left"
  t={[Function]}
  useOnSelect={[Function]}
  useProduct={[Function]}
  useSelector={[Function]}
  useToolbarFieldOptions={[Function]}
/>
`;

exports[`Toolbar Component should return an empty render, or variant filter, when disabled or missing filters: missing primary, has secondary filters 1`] = `
<Toolbar
  className="curiosity-toolbar pf-m-toggle-group-container ins-c-primary-toolbar"
  clearAllFilters={[Function]}
  clearFiltersButtonText="t(curiosity-toolbar.clearFilters)"
  collapseListedFiltersBreakpoint="sm"
  id="curiosity-toolbar"
>
  <ToolbarFieldGroupVariant
    isFilter={false}
    isStandalone={false}
    position="left"
    t={[Function]}
    useOnSelect={[Function]}
    useProduct={[Function]}
    useSelector={[Function]}
    useToolbarFieldOptions={[Function]}
  />
  <ToolbarContent
    className="curiosity-toolbar__content"
    isExpanded={false}
    showClearFiltersButton={false}
  >
    <ToolbarToggleGroup
      breakpoint="md"
      toggleIcon={<FilterIcon />}
    >
      <ForwardRef
        variant="filter-group"
      />
    </ToolbarToggleGroup>
    <ForwardRef />
    <ForwardRef
      align={
        {
          "default": "alignRight",
        }
      }
    >
      <span>
        lorem ipsum
      </span>
    </ForwardRef>
  </ToolbarContent>
</Toolbar>
`;
