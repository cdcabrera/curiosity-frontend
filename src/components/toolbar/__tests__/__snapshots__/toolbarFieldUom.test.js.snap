// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ToolbarFieldUom Component should export select options: toolbarFieldOptions 1`] = `
[
  {
    "selected": false,
    "title": "t(curiosity-toolbar.label_uom, {"context":"Cores"})",
    "value": "Cores",
  },
  {
    "selected": false,
    "title": "t(curiosity-toolbar.label_uom, {"context":"Sockets"})",
    "value": "Sockets",
  },
  {
    "selected": false,
    "title": "t(curiosity-toolbar.label_uom, {"context":"Core-seconds"})",
    "value": "Core-seconds",
  },
  {
    "selected": false,
    "title": "t(curiosity-toolbar.label_uom, {"context":"Instance-hours"})",
    "value": "Instance-hours",
  },
  {
    "selected": false,
    "title": "t(curiosity-toolbar.label_uom, {"context":"Storage-gibibytes"})",
    "value": "Storage-gibibytes",
  },
  {
    "selected": false,
    "title": "t(curiosity-toolbar.label_uom, {"context":"Storage-gibibyte-months"})",
    "value": "Storage-gibibyte-months",
  },
  {
    "selected": false,
    "title": "t(curiosity-toolbar.label_uom, {"context":"Transfer-gibibytes"})",
    "value": "Transfer-gibibytes",
  },
  {
    "selected": false,
    "title": "t(curiosity-toolbar.label_uom, {"context":"vCPUs"})",
    "value": "vCPUs",
  },
]
`;

exports[`ToolbarFieldUom Component should handle updating uom through redux state with component: dispatch, component 1`] = `
[
  [
    [
      {
        "type": "SET_QUERY_RESET_INVENTORY_LIST",
        "viewId": undefined,
      },
      {
        "filter": "metric_id",
        "type": "SET_QUERY",
        "value": "Cores",
        "viewId": undefined,
      },
    ],
  ],
]
`;

exports[`ToolbarFieldUom Component should handle updating uom through redux state with hook: dispatch, hook 1`] = `
[
  [
    [
      {
        "type": "SET_QUERY_RESET_INVENTORY_LIST",
        "viewId": "loremIpsum",
      },
      {
        "filter": "metric_id",
        "type": "SET_QUERY",
        "value": "dolor sit",
        "viewId": "loremIpsum",
      },
    ],
  ],
]
`;

exports[`ToolbarFieldUom Component should render a basic component: basic 1`] = `
<Select
  aria-label="t(curiosity-toolbar.placeholder, {"context":"uom"})"
  ariaLabel="Select option"
  className=""
  data-test="toolbarFieldUom"
  direction="down"
  id="generatedid-"
  isDisabled={false}
  isDropdownButton={false}
  isFlipEnabled={false}
  isInline={true}
  isToggleText={true}
  maxHeight={null}
  name={null}
  onSelect={[Function]}
  onSplitButton={[Function]}
  options={
    [
      {
        "selected": false,
        "title": "t(curiosity-toolbar.label_uom, {"context":"Cores"})",
        "value": "Cores",
      },
      {
        "selected": true,
        "title": "t(curiosity-toolbar.label_uom, {"context":"Sockets"})",
        "value": "Sockets",
      },
      {
        "selected": false,
        "title": "t(curiosity-toolbar.label_uom, {"context":"Core-seconds"})",
        "value": "Core-seconds",
      },
      {
        "selected": false,
        "title": "t(curiosity-toolbar.label_uom, {"context":"Instance-hours"})",
        "value": "Instance-hours",
      },
      {
        "selected": false,
        "title": "t(curiosity-toolbar.label_uom, {"context":"Storage-gibibytes"})",
        "value": "Storage-gibibytes",
      },
      {
        "selected": false,
        "title": "t(curiosity-toolbar.label_uom, {"context":"Storage-gibibyte-months"})",
        "value": "Storage-gibibyte-months",
      },
      {
        "selected": false,
        "title": "t(curiosity-toolbar.label_uom, {"context":"Transfer-gibibytes"})",
        "value": "Transfer-gibibytes",
      },
      {
        "selected": false,
        "title": "t(curiosity-toolbar.label_uom, {"context":"vCPUs"})",
        "value": "vCPUs",
      },
    ]
  }
  placeholder="t(curiosity-toolbar.placeholder, {"context":"uom"})"
  position="left"
  selectedOptions="Sockets"
  splitButtonVariant={null}
  toggleIcon={null}
  variant="single"
/>
`;
