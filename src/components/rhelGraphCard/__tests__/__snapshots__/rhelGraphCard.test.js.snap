// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RhelGraphCard Component should render a non-connected component: non-connected 1`] = `
<RhelGraphCard
  endDate={2019-07-20T23:59:59.999Z}
  error={false}
  fulfilled={false}
  getGraphReports={[Function]}
  graphData={
    Object {
      "usage": Array [],
    }
  }
  graphGranularity="daily"
  pending={false}
  startDate={2019-06-20T00:00:00.000Z}
  t={[Function]}
>
  <Card
    className="curiosity-usage-graph fadein"
  >
    <article
      className="pf-c-card curiosity-usage-graph fadein"
    >
      <CardHead>
        <div
          className="pf-c-card__head"
        >
          <h2>
            Daily CPU socket usage
          </h2>
          <CardActions>
            <div
              className="pf-c-card__actions"
            >
              <Select
                aria-label="Select date range"
                ariaLabel="Select option"
                className=""
                id="generatedid-"
                isDisabled={false}
                name={null}
                onSelect={[Function]}
                options={
                  Array [
                    Object {
                      "title": "Daily",
                      "value": "daily",
                    },
                    Object {
                      "title": "Weekly",
                      "value": "weekly",
                    },
                    Object {
                      "title": "Monthly",
                      "value": "monthly",
                    },
                    Object {
                      "title": "Quarterly",
                      "value": "quarterly",
                    },
                  ]
                }
                placeholder="Select date range"
                selectedOptions="daily"
                variant="single"
              >
                <Select
                  aria-label="Select option"
                  ariaLabelClear="Clear all"
                  ariaLabelRemove="Remove"
                  ariaLabelToggle="Options menu"
                  ariaLabelTypeAhead=""
                  ariaLabelledBy=""
                  className="curiosity-select "
                  isExpanded={false}
                  isGrouped={false}
                  isPlain={false}
                  onClear={[Function]}
                  onSelect={[Function]}
                  onToggle={[Function]}
                  placeholderText="Select date range"
                  selections="Daily"
                  toggleId={null}
                  variant="single"
                  width=""
                >
                  <div
                    className="pf-c-select curiosity-select "
                    style={
                      Object {
                        "width": "",
                      }
                    }
                  >
                    <SelectToggle
                      ariaLabelToggle="Options menu"
                      ariaLabelledBy=" pf-toggle-id-2"
                      className=""
                      handleTypeaheadKeys={[Function]}
                      id="pf-toggle-id-2"
                      isActive={false}
                      isExpanded={false}
                      isFocused={false}
                      isHovered={false}
                      isPlain={false}
                      onClose={[Function]}
                      onEnter={[Function]}
                      onToggle={[Function]}
                      parentRef={
                        Object {
                          "current": <div
                            class="pf-c-select curiosity-select "
                          >
                            <button
                              aria-expanded="false"
                              aria-haspopup="listbox"
                              aria-labelledby=" pf-toggle-id-2"
                              class="pf-c-select__toggle"
                              id="pf-toggle-id-2"
                              type="button"
                            >
                              <div
                                class="pf-c-select__toggle-wrapper"
                              >
                                <span
                                  class="pf-c-select__toggle-text"
                                >
                                  Daily
                                </span>
                              </div>
                              <svg
                                aria-hidden="true"
                                class="pf-c-select__toggle-arrow"
                                fill="currentColor"
                                height="1em"
                                role="img"
                                style="vertical-align: -0.125em;"
                                viewBox="0 0 320 512"
                                width="1em"
                              >
                                <path
                                  d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                  transform=""
                                />
                              </svg>
                            </button>
                          </div>,
                        }
                      }
                      type="button"
                      variant="single"
                    >
                      <button
                        aria-expanded={false}
                        aria-haspopup="listbox"
                        aria-labelledby=" pf-toggle-id-2"
                        className="pf-c-select__toggle"
                        id="pf-toggle-id-2"
                        onClick={[Function]}
                        onKeyDown={[Function]}
                        type="button"
                      >
                        <div
                          className="pf-c-select__toggle-wrapper"
                        >
                          <span
                            className="pf-c-select__toggle-text"
                          >
                            Daily
                          </span>
                        </div>
                        <CaretDownIcon
                          className="pf-c-select__toggle-arrow"
                          color="currentColor"
                          noVerticalAlign={false}
                          size="sm"
                          title={null}
                        >
                          <svg
                            aria-hidden={true}
                            aria-labelledby={null}
                            className="pf-c-select__toggle-arrow"
                            fill="currentColor"
                            height="1em"
                            role="img"
                            style={
                              Object {
                                "verticalAlign": "-0.125em",
                              }
                            }
                            viewBox="0 0 320 512"
                            width="1em"
                          >
                            <path
                              d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                              transform=""
                            />
                          </svg>
                        </CaretDownIcon>
                      </button>
                    </SelectToggle>
                  </div>
                </Select>
              </Select>
            </div>
          </CardActions>
        </div>
      </CardHead>
      <CardBody>
        <div
          className="pf-c-card__body"
        >
          <div
            className="curiosity-skeleton-container"
          />
        </div>
      </CardBody>
    </article>
  </Card>
</RhelGraphCard>
`;

exports[`RhelGraphCard Component should render multiple states: error shows zeroed bar values 1`] = `
Object {
  "chartBarData": Array [
    Object {
      "label": "5 sockets on Jun 1",
      "x": "Jun 1",
      "y": 5,
    },
    Object {
      "label": "0 sockets on Jun 2
 -5 from previous day",
      "x": "Jun 2",
      "y": 0,
    },
    Object {
      "label": "0 sockets on Jun 3",
      "x": "Jun 3",
      "y": 0,
    },
    Object {
      "label": "0 sockets on Jun 4",
      "x": "Jun 4",
      "y": 0,
    },
    Object {
      "label": "0 sockets on Jun 5",
      "x": "Jun 5",
      "y": 0,
    },
    Object {
      "label": "0 sockets on Jun 6",
      "x": "Jun 6",
      "y": 0,
    },
    Object {
      "label": "0 sockets on Jun 7",
      "x": "Jun 7",
      "y": 0,
    },
    Object {
      "label": "7 sockets on Jun 8
 +7 from previous day",
      "x": "Jun 8",
      "y": 7,
    },
    Object {
      "label": "0 sockets on Jun 9
 -7 from previous day",
      "x": "Jun 9",
      "y": 0,
    },
    Object {
      "label": "0 sockets on Jun 10",
      "x": "Jun 10",
      "y": 0,
    },
    Object {
      "label": "0 sockets on Jun 11",
      "x": "Jun 11",
      "y": 0,
    },
    Object {
      "label": "0 sockets on Jun 12",
      "x": "Jun 12",
      "y": 0,
    },
    Object {
      "label": "0 sockets on Jun 13",
      "x": "Jun 13",
      "y": 0,
    },
    Object {
      "label": "0 sockets on Jun 14",
      "x": "Jun 14",
      "y": 0,
    },
    Object {
      "label": "0 sockets on Jun 15",
      "x": "Jun 15",
      "y": 0,
    },
    Object {
      "label": "0 sockets on Jun 16",
      "x": "Jun 16",
      "y": 0,
    },
    Object {
      "label": "0 sockets on Jun 17",
      "x": "Jun 17",
      "y": 0,
    },
    Object {
      "label": "0 sockets on Jun 18",
      "x": "Jun 18",
      "y": 0,
    },
    Object {
      "label": "0 sockets on Jun 19",
      "x": "Jun 19",
      "y": 0,
    },
    Object {
      "label": "0 sockets on Jun 20",
      "x": "Jun 20",
      "y": 0,
    },
    Object {
      "label": "0 sockets on Jun 21",
      "x": "Jun 21",
      "y": 0,
    },
    Object {
      "label": "0 sockets on Jun 22",
      "x": "Jun 22",
      "y": 0,
    },
    Object {
      "label": "0 sockets on Jun 23",
      "x": "Jun 23",
      "y": 0,
    },
    Object {
      "label": "0 sockets on Jun 24",
      "x": "Jun 24",
      "y": 0,
    },
    Object {
      "label": "3 sockets on Jun 25
 +3 from previous day",
      "x": "Jun 25",
      "y": 3,
    },
    Object {
      "label": "0 sockets on Jun 26
 -3 from previous day",
      "x": "Jun 26",
      "y": 0,
    },
    Object {
      "label": "0 sockets on Jun 27",
      "x": "Jun 27",
      "y": 0,
    },
    Object {
      "label": "0 sockets on Jun 28",
      "x": "Jun 28",
      "y": 0,
    },
    Object {
      "label": "0 sockets on Jun 29",
      "x": "Jun 29",
      "y": 0,
    },
    Object {
      "label": "0 sockets on Jun 30",
      "x": "Jun 30",
      "y": 0,
    },
  ],
}
`;

exports[`RhelGraphCard Component should render multiple states: fulfilled 1`] = `
<Card
  className="curiosity-usage-graph fadein"
>
  <CardHead>
    <h2>
      Daily CPU socket usage
    </h2>
    <CardActions>
      <Select
        aria-label="Select date range"
        ariaLabel="Select option"
        className=""
        id="generatedid-"
        isDisabled={false}
        name={null}
        onSelect={[Function]}
        options={
          Array [
            Object {
              "title": "Daily",
              "value": "daily",
            },
            Object {
              "title": "Weekly",
              "value": "weekly",
            },
            Object {
              "title": "Monthly",
              "value": "monthly",
            },
            Object {
              "title": "Quarterly",
              "value": "quarterly",
            },
          ]
        }
        placeholder="Select date range"
        selectedOptions="daily"
        variant="single"
      />
    </CardActions>
  </CardHead>
  <CardBody>
    <div
      className="curiosity-skeleton-container"
    >
      <Chart
        domain={
          Object {
            "x": Array [
              0,
              30,
            ],
            "y": Array [
              0,
              10,
            ],
          }
        }
        domainPadding={
          Object {
            "x": Array [
              30,
              25,
            ],
          }
        }
        height={275}
        padding={
          Object {
            "bottom": 80,
            "left": 50,
            "right": 50,
            "top": 50,
          }
        }
        width={0}
      >
        <ChartAxis
          fixLabelOverlap={true}
          tickValues={
            Array [
              "Jun 1",
              "Jun 6",
              "Jun 11",
              "Jun 16",
              "Jun 21",
              "Jun 26",
            ]
          }
        />
        <ChartAxis
          dependentAxis={true}
          showGrid={true}
        />
        <ChartStack>
          <ChartBar
            data={
              Array [
                Object {
                  "label": "5 sockets on Jun 1",
                  "x": "Jun 1",
                  "y": 5,
                },
                Object {
                  "label": "0 sockets on Jun 2
 -5 from previous day",
                  "x": "Jun 2",
                  "y": 0,
                },
                Object {
                  "label": "0 sockets on Jun 3",
                  "x": "Jun 3",
                  "y": 0,
                },
                Object {
                  "label": "0 sockets on Jun 4",
                  "x": "Jun 4",
                  "y": 0,
                },
                Object {
                  "label": "0 sockets on Jun 5",
                  "x": "Jun 5",
                  "y": 0,
                },
                Object {
                  "label": "0 sockets on Jun 6",
                  "x": "Jun 6",
                  "y": 0,
                },
                Object {
                  "label": "0 sockets on Jun 7",
                  "x": "Jun 7",
                  "y": 0,
                },
                Object {
                  "label": "7 sockets on Jun 8
 +7 from previous day",
                  "x": "Jun 8",
                  "y": 7,
                },
                Object {
                  "label": "0 sockets on Jun 9
 -7 from previous day",
                  "x": "Jun 9",
                  "y": 0,
                },
                Object {
                  "label": "0 sockets on Jun 10",
                  "x": "Jun 10",
                  "y": 0,
                },
                Object {
                  "label": "0 sockets on Jun 11",
                  "x": "Jun 11",
                  "y": 0,
                },
                Object {
                  "label": "0 sockets on Jun 12",
                  "x": "Jun 12",
                  "y": 0,
                },
                Object {
                  "label": "0 sockets on Jun 13",
                  "x": "Jun 13",
                  "y": 0,
                },
                Object {
                  "label": "0 sockets on Jun 14",
                  "x": "Jun 14",
                  "y": 0,
                },
                Object {
                  "label": "0 sockets on Jun 15",
                  "x": "Jun 15",
                  "y": 0,
                },
                Object {
                  "label": "0 sockets on Jun 16",
                  "x": "Jun 16",
                  "y": 0,
                },
                Object {
                  "label": "0 sockets on Jun 17",
                  "x": "Jun 17",
                  "y": 0,
                },
                Object {
                  "label": "0 sockets on Jun 18",
                  "x": "Jun 18",
                  "y": 0,
                },
                Object {
                  "label": "0 sockets on Jun 19",
                  "x": "Jun 19",
                  "y": 0,
                },
                Object {
                  "label": "0 sockets on Jun 20",
                  "x": "Jun 20",
                  "y": 0,
                },
                Object {
                  "label": "0 sockets on Jun 21",
                  "x": "Jun 21",
                  "y": 0,
                },
                Object {
                  "label": "0 sockets on Jun 22",
                  "x": "Jun 22",
                  "y": 0,
                },
                Object {
                  "label": "0 sockets on Jun 23",
                  "x": "Jun 23",
                  "y": 0,
                },
                Object {
                  "label": "0 sockets on Jun 24",
                  "x": "Jun 24",
                  "y": 0,
                },
                Object {
                  "label": "3 sockets on Jun 25
 +3 from previous day",
                  "x": "Jun 25",
                  "y": 3,
                },
                Object {
                  "label": "0 sockets on Jun 26
 -3 from previous day",
                  "x": "Jun 26",
                  "y": 0,
                },
                Object {
                  "label": "0 sockets on Jun 27",
                  "x": "Jun 27",
                  "y": 0,
                },
                Object {
                  "label": "0 sockets on Jun 28",
                  "x": "Jun 28",
                  "y": 0,
                },
                Object {
                  "label": "0 sockets on Jun 29",
                  "x": "Jun 29",
                  "y": 0,
                },
                Object {
                  "label": "0 sockets on Jun 30",
                  "x": "Jun 30",
                  "y": 0,
                },
              ]
            }
            labelComponent={<ChartTooltip />}
          />
        </ChartStack>
      </Chart>
    </div>
  </CardBody>
</Card>
`;

exports[`RhelGraphCard Component should render multiple states: pending 1`] = `
<Card
  className="curiosity-usage-graph fadein"
>
  <CardHead>
    <h2>
      Daily CPU socket usage
    </h2>
    <CardActions>
      <Select
        aria-label="Select date range"
        ariaLabel="Select option"
        className=""
        id="generatedid-"
        isDisabled={false}
        name={null}
        onSelect={[Function]}
        options={
          Array [
            Object {
              "title": "Daily",
              "value": "daily",
            },
            Object {
              "title": "Weekly",
              "value": "weekly",
            },
            Object {
              "title": "Monthly",
              "value": "monthly",
            },
            Object {
              "title": "Quarterly",
              "value": "quarterly",
            },
          ]
        }
        placeholder="Select date range"
        selectedOptions="daily"
        variant="single"
      />
    </CardActions>
  </CardHead>
  <CardBody>
    <div
      className="curiosity-skeleton-container"
    >
      <Skeleton
        size="xs"
      />
      <Skeleton
        size="sm"
      />
      <Skeleton
        size="md"
      />
      <Skeleton
        size="lg"
      />
    </div>
  </CardBody>
</Card>
`;
