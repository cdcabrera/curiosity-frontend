// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Redirect Component should handle a redirect with a url: redirect url 1`] = `
<Fragment>
  Redirected towards 
  //lorem/ipsum?dolor=sit
</Fragment>
`;

exports[`Redirect Component should handle existing routes with and without withRouter: existing route: outside of withRouter 1`] = `
<Fragment>
  Redirected towards 
  /openshift-container
</Fragment>
`;

exports[`Redirect Component should handle existing routes with and without withRouter: existing route: routed redirect route 1`] = `
<Router
  history={
    Object {
      "action": "POP",
      "block": [Function],
      "createHref": [Function],
      "go": [Function],
      "goBack": [Function],
      "goForward": [Function],
      "length": 1,
      "listen": [Function],
      "location": Object {
        "hash": "",
        "pathname": "/",
        "search": "",
        "state": undefined,
      },
      "push": [Function],
      "replace": [Function],
    }
  }
>
  <Redirect
    baseName="/"
    isForced={false}
    isRedirect={true}
    isReplace={false}
    route="/openshift-container"
    url={null}
  />
</Router>
`;

exports[`Redirect Component should handle missing routes with and without withRouter: missing route: outside of withRouter 1`] = `
<Fragment>
  Redirected towards 
  /lorem-ipsum
</Fragment>
`;

exports[`Redirect Component should handle missing routes with and without withRouter: missing route: routed redirect route 1`] = `
<Router
  history={
    Object {
      "action": "POP",
      "block": [Function],
      "createHref": [Function],
      "go": [Function],
      "goBack": [Function],
      "goForward": [Function],
      "length": 1,
      "listen": [Function],
      "location": Object {
        "hash": "",
        "pathname": "/",
        "search": "",
        "state": undefined,
      },
      "push": [Function],
      "replace": [Function],
    }
  }
>
  <Redirect
    baseName="/"
    isForced={false}
    isRedirect={true}
    isReplace={false}
    route="/lorem-ipsum"
    url={null}
  />
</Router>
`;

exports[`Redirect Component should render a basic component: basic 1`] = `null`;

exports[`Redirect Component should render a routed component: routed 1`] = `null`;
